# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Verification {
  code: String!
  isVerified: Boolean!
}

type User {
  id: String!
  email: String!
  password: String!
  role: UserRole!
  verification: Verification!
}

enum UserRole {
  customer
  delivery
  owner
}

type UserWithoutPassword {
  id: String!
  email: String!
  role: UserRole!
  verification: Verification!
}

type Category {
  id: String!
  name: String!
  img: String
  slug: String!
  restaurantsCount: Int!
}

type Dish {
  name: String!
  price: Int!
  img: String
  description: String
  options: [String!]!
}

type Restaurant {
  id: String!
  name: String!
  img: String!
  address: String!
  category: Category!
  owner: User!
  dishes: [Dish!]!
}

type CreateRestaurantRes {
  ok: Boolean!
  error: String
  data: Restaurant
}

type DeleteRestaurantRes {
  ok: Boolean!
  error: String
  data: Boolean
}

type EditRestaurantRes {
  ok: Boolean!
  error: String
  data: Restaurant
}

type GetRestaurantRes {
  ok: Boolean!
  error: String
  data: Restaurant
}

type RestaurantsRes {
  ok: Boolean!
  error: String
  data: [Restaurant!]
}

type SearchRestaurantsRes {
  ok: Boolean!
  error: String
  data: [Restaurant!]
}

type AllCategoriesRes {
  ok: Boolean!
  error: String
  data: [Category!]
}

type CategoryRes {
  ok: Boolean!
  error: String
  data: Category
}

type CreateUserRes {
  ok: Boolean!
  error: String
  data: UserWithoutPassword
}

type LoginRes {
  ok: Boolean!
  error: String
  data: String
}

type MeRes {
  ok: Boolean!
  error: String
  data: UserWithoutPassword
}

type ProfileRes {
  ok: Boolean!
  error: String
  data: UserWithoutPassword
}

type UpdateProfileRes {
  ok: Boolean!
  error: String
  data: UserWithoutPassword
}

type VerifyCodRes {
  ok: Boolean!
  error: String
  data: Boolean
}

type CreateDishRes {
  ok: Boolean!
  error: String
  data: Dish
}

type DeleteDishRes {
  ok: Boolean!
  error: String
  data: [Dish!]
}

type Order {
  customer: User!
  driver: User
  restaurant: Restaurant!
  dishes: [String!]!
  status: OrderStatus!
  total: Float!
}

enum OrderStatus {
  Pending
  Cooking
  PickedUp
  Delivered
}

type CreateOrderRes {
  ok: Boolean!
  error: String
  data: Order
}

type Query {
  restaurants(restaurantsArgs: RestaurantsDto): RestaurantsRes!
  getRestaurant(getRestaurantInput: GetRestaurantDto!): GetRestaurantRes!
  searchRestaurants(searchRestaurantsInput: SearchRestaurantsInput!): SearchRestaurantsRes!
  allCategories: AllCategoriesRes!
  category(categoryArgs: CategoryDto!): CategoryRes!
  me: MeRes!
  profile(id: String!): ProfileRes!
}

input RestaurantsDto {
  name: String
  img: String
  address: String
  dishes: [DishInput!]
  category: String
  owner: String
}

input DishInput {
  name: String!
  price: Int!
  img: String
  description: String
  options: [String!]!
}

input GetRestaurantDto {
  id: String!
}

input SearchRestaurantsInput {
  query: String!
}

input CategoryDto {
  slug: String!
}

type Mutation {
  createRestaurant(createRestaurantArgs: CreateRestaurantDto!): CreateRestaurantRes!
  editRestaurant(editRestaurantArgs: EditRestaurantDto!): EditRestaurantRes!
  deleteRestaurant(deleteRestaurantArgs: DeleteRestaurantDto!): DeleteRestaurantRes!
  createDish(createDishInput: CreateDishInput!): CreateDishRes!
  deleteDish(deleteDishInput: DeleteDishInput!): DeleteDishRes!
  createUser(createUserArgs: CreateUserDto!): CreateUserRes!
  login(loginArgs: LoginDto!): LoginRes!
  updateProfile(updateProfileArgs: UpdateProfileDto!): UpdateProfileRes!
  verifyCode(verifyCodeArgs: VerifyCodeDto!): VerifyCodRes!
  createOrder(createOrderInput: CreateOrderInput!): CreateOrderRes!
}

input CreateRestaurantDto {
  name: String!
  img: String!
  address: String!
  categoryName: String!
}

input EditRestaurantDto {
  name: String
  img: String
  address: String
  categoryName: String
  id: String!
}

input DeleteRestaurantDto {
  id: String!
}

input CreateDishInput {
  name: String
  price: Int
  img: String
  description: String
  options: [String!]
  restaurantId: String!
}

input DeleteDishInput {
  name: String!
  restaurantId: String!
}

input CreateUserDto {
  email: String!
  password: String!
  role: UserRole!
}

input LoginDto {
  email: String!
  password: String!
}

input UpdateProfileDto {
  email: String
  password: String
}

input VerifyCodeDto {
  code: String!
}

input CreateOrderInput {
  restaurantId: String!
  dishIds: [String!]!
}
